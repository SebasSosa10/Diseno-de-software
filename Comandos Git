Git clone: realizar una copia idéntica de la última versión de un proyecto en un repositorio y la guarda en tu ordenador.
Git branch: varios desarrolladores pueden trabajar en paralelo en el mismo proyecto simultáneamente. Podemos usar el comando git branch para crearlas, listarlas y eliminarlas.
Git checkout: Para trabajar en una rama, primero tienes que cambiarte a ella. Usaremos git checkout principalmente para cambiarte de una rama a otra. También lo podemos usar para chequear archivos y commits.
Git status: nos da toda la información necesaria sobre la rama actual.
Git add: para incluir los cambios del o de los archivos en tu siguiente commit.
Git commit: Una vez que se llega a cierto punto en el desarrollo, queremos guardar nuestros cambios.
Git push: envía tus commits al repositorio remoto.
Git pull: recogeremos actualizaciones del repositorio remoto e inmediatamente aplicamos estos últimos cambios en local.
Git revert: se utiliza para registrar algunas confirmaciones nuevas para revertir el efecto de algunas confirmaciones anteriores (a menudo solo una defectuosa).
Git merge: integra las características de tu rama con todos los commits realizados a las ramas dev (o master).
